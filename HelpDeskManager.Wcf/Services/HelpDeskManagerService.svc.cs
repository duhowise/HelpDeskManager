/*************************************************************
** Class generated by CodeTrigger, Version 4.8.6.1
** This class was generated on 9/16/2016 11:50:03 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.Text;
using HelpDeskManager.Business;

namespace HelpDeskManager.Wcf
{
	public partial class HelpDeskManagerService : IHelpDeskManagerService
	{
		#region BODepartment services
		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public virtual BODepartment GetDepartment(Int32 id)
		{
			BODepartment boDepartment = null;
			try
			{ 	boDepartment = new BODepartment(id);	}
			/*this exception occurs when the business object constructor fails/cannot be instantiatiated, 
			* ie the primary/unique key passed in is not valid*/
			catch(NullReferenceException)
			{ 		}
			return boDepartment;
		}

		///<Summary>
		///SaveNew
		///This method persists a new Department record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNewDepartment(BODepartment boDepartment)
		{
			boDepartment.SaveNew();
		}

		///<Summary>
		///Update
		///This method updates one Department record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BODepartment
		///</parameters>
		public virtual void UpdateDepartment(BODepartment boDepartment)
		{
			boDepartment.Update();
		}

		///<Summary>
		///Delete
		///This method deletes one Department record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteDepartment(Int32 id)
		{
			BODepartment boDepartment = new BODepartment(id);
			boDepartment.Delete();
		}

		///<Summary>
		///BODepartmentCollection
		///This method returns the population of BODepartment objects
		///</Summary>
		///<returns>
		///IList[BODepartment]
		///</returns>
		///<parameters>
		///BODepartment
		///</parameters>
		public virtual IList<BODepartment> DepartmentCollection()
		{
			return BODepartment.DepartmentCollection();
		}
		
		///<Summary>
		///BODepartmentCollectionCount
		///This method returns a count of the population of BODepartment objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BODepartment
		///</parameters>
		public virtual Int32 DepartmentCollectionCount()
		{
			return BODepartment.DepartmentCollectionCount();
		}
		
		///<Summary>
		///BODepartmentCollectionFromSearchFields
		///This method returns a collection of BODepartment objects, based on search fields
		///</Summary>
		///<returns>
		///IList[BODepartment]
		///</returns>
		///<parameters>
		///BODepartment
		///</parameters>
		public virtual IList<BODepartment> DepartmentCollectionFromSearchFields(BODepartment boDepartment)
		{
			return BODepartment.DepartmentCollectionFromSearchFields(boDepartment);
		}
		
		///<Summary>
		///BODepartmentCollectionFromSearchFieldsCount
		///This method returns a count of its collection of BODepartment objects, based on search fields
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BODepartment
		///</parameters>
		public virtual Int32 DepartmentCollectionFromSearchFieldsCount(BODepartment boDepartment)
		{
			return BODepartment.DepartmentCollectionFromSearchFieldsCount(boDepartment);
		}
		
		///<Summary>
		///Department_IssueCollection
		///This method returns its collection of BOIssue objects
		///</Summary>
		///<returns>
		///IList[BOIssue]
		///</returns>
		///<parameters>
		///BODepartment
		///</parameters>
		public virtual IList<BOIssue> Department_IssueCollection(BODepartment boDepartment)
		{
			return boDepartment.IssueCollection();
		}
		
		///<Summary>
		///Department_StaffCollection
		///This method returns its collection of BOStaff objects
		///</Summary>
		///<returns>
		///IList[BOStaff]
		///</returns>
		///<parameters>
		///BODepartment
		///</parameters>
		public virtual IList<BOStaff> Department_StaffCollection(BODepartment boDepartment)
		{
			return boDepartment.StaffCollection();
		}
		
		///<Summary>
		///AddIssueToDepartment
		///This method persists a BOIssue object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIssue
		///</parameters>
		public virtual void AddIssueToDepartment(BODepartment boDepartment, BOIssue boIssue)
		{
			boDepartment.AddIssue(boIssue);
		}
		
		///<Summary>
		///DeleteAllIssueFromDepartment
		///This method deletes all BOIssue objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllIssueFromDepartment(BODepartment boDepartment)
		{
			boDepartment.DeleteAllIssue();
		}

		
		///<Summary>
		///AddStaffToDepartment
		///This method persists a BOStaff object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOStaff
		///</parameters>
		public virtual void AddStaffToDepartment(BODepartment boDepartment, BOStaff boStaff)
		{
			boDepartment.AddStaff(boStaff);
		}
		
		///<Summary>
		///DeleteAllStaffFromDepartment
		///This method deletes all BOStaff objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllStaffFromDepartment(BODepartment boDepartment)
		{
			boDepartment.DeleteAllStaff();
		}

		

		#endregion

		#region BODesignation services
		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public virtual BODesignation GetDesignation(Int32 id)
		{
			BODesignation boDesignation = null;
			try
			{ 	boDesignation = new BODesignation(id);	}
			/*this exception occurs when the business object constructor fails/cannot be instantiatiated, 
			* ie the primary/unique key passed in is not valid*/
			catch(NullReferenceException)
			{ 		}
			return boDesignation;
		}

		///<Summary>
		///SaveNew
		///This method persists a new Designation record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNewDesignation(BODesignation boDesignation)
		{
			boDesignation.SaveNew();
		}

		///<Summary>
		///Update
		///This method updates one Designation record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BODesignation
		///</parameters>
		public virtual void UpdateDesignation(BODesignation boDesignation)
		{
			boDesignation.Update();
		}

		///<Summary>
		///Delete
		///This method deletes one Designation record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteDesignation(Int32 id)
		{
			BODesignation boDesignation = new BODesignation(id);
			boDesignation.Delete();
		}

		///<Summary>
		///BODesignationCollection
		///This method returns the population of BODesignation objects
		///</Summary>
		///<returns>
		///IList[BODesignation]
		///</returns>
		///<parameters>
		///BODesignation
		///</parameters>
		public virtual IList<BODesignation> DesignationCollection()
		{
			return BODesignation.DesignationCollection();
		}
		
		///<Summary>
		///BODesignationCollectionCount
		///This method returns a count of the population of BODesignation objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BODesignation
		///</parameters>
		public virtual Int32 DesignationCollectionCount()
		{
			return BODesignation.DesignationCollectionCount();
		}
		
		///<Summary>
		///BODesignationCollectionFromSearchFields
		///This method returns a collection of BODesignation objects, based on search fields
		///</Summary>
		///<returns>
		///IList[BODesignation]
		///</returns>
		///<parameters>
		///BODesignation
		///</parameters>
		public virtual IList<BODesignation> DesignationCollectionFromSearchFields(BODesignation boDesignation)
		{
			return BODesignation.DesignationCollectionFromSearchFields(boDesignation);
		}
		
		///<Summary>
		///BODesignationCollectionFromSearchFieldsCount
		///This method returns a count of its collection of BODesignation objects, based on search fields
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BODesignation
		///</parameters>
		public virtual Int32 DesignationCollectionFromSearchFieldsCount(BODesignation boDesignation)
		{
			return BODesignation.DesignationCollectionFromSearchFieldsCount(boDesignation);
		}
		
		///<Summary>
		///Designation_StaffCollection
		///This method returns its collection of BOStaff objects
		///</Summary>
		///<returns>
		///IList[BOStaff]
		///</returns>
		///<parameters>
		///BODesignation
		///</parameters>
		public virtual IList<BOStaff> Designation_StaffCollection(BODesignation boDesignation)
		{
			return boDesignation.StaffCollection();
		}
		
		///<Summary>
		///Designation_TechnicianCollection
		///This method returns its collection of BOTechnician objects
		///</Summary>
		///<returns>
		///IList[BOTechnician]
		///</returns>
		///<parameters>
		///BODesignation
		///</parameters>
		public virtual IList<BOTechnician> Designation_TechnicianCollection(BODesignation boDesignation)
		{
			return boDesignation.TechnicianCollection();
		}
		
		///<Summary>
		///AddStaffToDesignation
		///This method persists a BOStaff object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOStaff
		///</parameters>
		public virtual void AddStaffToDesignation(BODesignation boDesignation, BOStaff boStaff)
		{
			boDesignation.AddStaff(boStaff);
		}
		
		///<Summary>
		///DeleteAllStaffFromDesignation
		///This method deletes all BOStaff objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllStaffFromDesignation(BODesignation boDesignation)
		{
			boDesignation.DeleteAllStaff();
		}

		
		///<Summary>
		///AddTechnicianToDesignation
		///This method persists a BOTechnician object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOTechnician
		///</parameters>
		public virtual void AddTechnicianToDesignation(BODesignation boDesignation, BOTechnician boTechnician)
		{
			boDesignation.AddTechnician(boTechnician);
		}
		
		///<Summary>
		///DeleteAllTechnicianFromDesignation
		///This method deletes all BOTechnician objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllTechnicianFromDesignation(BODesignation boDesignation)
		{
			boDesignation.DeleteAllTechnician();
		}

		

		#endregion

		#region BOIssue services
		///<Summary>
		///SaveNew
		///This method persists a new Issue record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNewIssue(BOIssue boIssue)
		{
			boIssue.SaveNew();
		}

		///<Summary>
		///BOIssueCollection
		///This method returns the population of BOIssue objects
		///</Summary>
		///<returns>
		///IList[BOIssue]
		///</returns>
		///<parameters>
		///BOIssue
		///</parameters>
		public virtual IList<BOIssue> IssueCollection()
		{
			return BOIssue.IssueCollection();
		}
		
		///<Summary>
		///BOIssueCollectionCount
		///This method returns a count of the population of BOIssue objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOIssue
		///</parameters>
		public virtual Int32 IssueCollectionCount()
		{
			return BOIssue.IssueCollectionCount();
		}
		
		///<Summary>
		///BOIssueCollectionFromSearchFields
		///This method returns a collection of BOIssue objects, based on search fields
		///</Summary>
		///<returns>
		///IList[BOIssue]
		///</returns>
		///<parameters>
		///BOIssue
		///</parameters>
		public virtual IList<BOIssue> IssueCollectionFromSearchFields(BOIssue boIssue)
		{
			return BOIssue.IssueCollectionFromSearchFields(boIssue);
		}
		
		///<Summary>
		///BOIssueCollectionFromSearchFieldsCount
		///This method returns a count of its collection of BOIssue objects, based on search fields
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOIssue
		///</parameters>
		public virtual Int32 IssueCollectionFromSearchFieldsCount(BOIssue boIssue)
		{
			return BOIssue.IssueCollectionFromSearchFieldsCount(boIssue);
		}
		

		#endregion

		#region BOIssueStatus services
		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public virtual BOIssueStatus GetIssueStatus(Int32 id)
		{
			BOIssueStatus boIssueStatus = null;
			try
			{ 	boIssueStatus = new BOIssueStatus(id);	}
			/*this exception occurs when the business object constructor fails/cannot be instantiatiated, 
			* ie the primary/unique key passed in is not valid*/
			catch(NullReferenceException)
			{ 		}
			return boIssueStatus;
		}

		///<Summary>
		///SaveNew
		///This method persists a new IssueStatus record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNewIssueStatus(BOIssueStatus boIssueStatus)
		{
			boIssueStatus.SaveNew();
		}

		///<Summary>
		///Update
		///This method updates one IssueStatus record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIssueStatus
		///</parameters>
		public virtual void UpdateIssueStatus(BOIssueStatus boIssueStatus)
		{
			boIssueStatus.Update();
		}

		///<Summary>
		///Delete
		///This method deletes one IssueStatus record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteIssueStatus(Int32 id)
		{
			BOIssueStatus boIssueStatus = new BOIssueStatus(id);
			boIssueStatus.Delete();
		}

		///<Summary>
		///BOIssueStatusCollection
		///This method returns the population of BOIssueStatus objects
		///</Summary>
		///<returns>
		///IList[BOIssueStatus]
		///</returns>
		///<parameters>
		///BOIssueStatus
		///</parameters>
		public virtual IList<BOIssueStatus> IssueStatusCollection()
		{
			return BOIssueStatus.IssueStatusCollection();
		}
		
		///<Summary>
		///BOIssueStatusCollectionCount
		///This method returns a count of the population of BOIssueStatus objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOIssueStatus
		///</parameters>
		public virtual Int32 IssueStatusCollectionCount()
		{
			return BOIssueStatus.IssueStatusCollectionCount();
		}
		
		///<Summary>
		///BOIssueStatusCollectionFromSearchFields
		///This method returns a collection of BOIssueStatus objects, based on search fields
		///</Summary>
		///<returns>
		///IList[BOIssueStatus]
		///</returns>
		///<parameters>
		///BOIssueStatus
		///</parameters>
		public virtual IList<BOIssueStatus> IssueStatusCollectionFromSearchFields(BOIssueStatus boIssueStatus)
		{
			return BOIssueStatus.IssueStatusCollectionFromSearchFields(boIssueStatus);
		}
		
		///<Summary>
		///BOIssueStatusCollectionFromSearchFieldsCount
		///This method returns a count of its collection of BOIssueStatus objects, based on search fields
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOIssueStatus
		///</parameters>
		public virtual Int32 IssueStatusCollectionFromSearchFieldsCount(BOIssueStatus boIssueStatus)
		{
			return BOIssueStatus.IssueStatusCollectionFromSearchFieldsCount(boIssueStatus);
		}
		
		///<Summary>
		///IssueStatus_IssueCollection
		///This method returns its collection of BOIssue objects
		///</Summary>
		///<returns>
		///IList[BOIssue]
		///</returns>
		///<parameters>
		///BOIssueStatus
		///</parameters>
		public virtual IList<BOIssue> IssueStatus_IssueCollection(BOIssueStatus boIssueStatus)
		{
			return boIssueStatus.IssueCollection();
		}
		
		///<Summary>
		///AddIssueToIssueStatus
		///This method persists a BOIssue object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIssue
		///</parameters>
		public virtual void AddIssueToIssueStatus(BOIssueStatus boIssueStatus, BOIssue boIssue)
		{
			boIssueStatus.AddIssue(boIssue);
		}
		
		///<Summary>
		///DeleteAllIssueFromIssueStatus
		///This method deletes all BOIssue objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllIssueFromIssueStatus(BOIssueStatus boIssueStatus)
		{
			boIssueStatus.DeleteAllIssue();
		}

		

		#endregion

		#region BOIssuetype services
		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public virtual BOIssuetype GetIssuetype(Int32 id)
		{
			BOIssuetype boIssuetype = null;
			try
			{ 	boIssuetype = new BOIssuetype(id);	}
			/*this exception occurs when the business object constructor fails/cannot be instantiatiated, 
			* ie the primary/unique key passed in is not valid*/
			catch(NullReferenceException)
			{ 		}
			return boIssuetype;
		}

		///<Summary>
		///SaveNew
		///This method persists a new Issuetype record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNewIssuetype(BOIssuetype boIssuetype)
		{
			boIssuetype.SaveNew();
		}

		///<Summary>
		///Update
		///This method updates one Issuetype record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIssuetype
		///</parameters>
		public virtual void UpdateIssuetype(BOIssuetype boIssuetype)
		{
			boIssuetype.Update();
		}

		///<Summary>
		///Delete
		///This method deletes one Issuetype record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteIssuetype(Int32 id)
		{
			BOIssuetype boIssuetype = new BOIssuetype(id);
			boIssuetype.Delete();
		}

		///<Summary>
		///BOIssuetypeCollection
		///This method returns the population of BOIssuetype objects
		///</Summary>
		///<returns>
		///IList[BOIssuetype]
		///</returns>
		///<parameters>
		///BOIssuetype
		///</parameters>
		public virtual IList<BOIssuetype> IssuetypeCollection()
		{
			return BOIssuetype.IssuetypeCollection();
		}
		
		///<Summary>
		///BOIssuetypeCollectionCount
		///This method returns a count of the population of BOIssuetype objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOIssuetype
		///</parameters>
		public virtual Int32 IssuetypeCollectionCount()
		{
			return BOIssuetype.IssuetypeCollectionCount();
		}
		
		///<Summary>
		///BOIssuetypeCollectionFromSearchFields
		///This method returns a collection of BOIssuetype objects, based on search fields
		///</Summary>
		///<returns>
		///IList[BOIssuetype]
		///</returns>
		///<parameters>
		///BOIssuetype
		///</parameters>
		public virtual IList<BOIssuetype> IssuetypeCollectionFromSearchFields(BOIssuetype boIssuetype)
		{
			return BOIssuetype.IssuetypeCollectionFromSearchFields(boIssuetype);
		}
		
		///<Summary>
		///BOIssuetypeCollectionFromSearchFieldsCount
		///This method returns a count of its collection of BOIssuetype objects, based on search fields
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOIssuetype
		///</parameters>
		public virtual Int32 IssuetypeCollectionFromSearchFieldsCount(BOIssuetype boIssuetype)
		{
			return BOIssuetype.IssuetypeCollectionFromSearchFieldsCount(boIssuetype);
		}
		
		///<Summary>
		///Issuetype_IssueCollection
		///This method returns its collection of BOIssue objects
		///</Summary>
		///<returns>
		///IList[BOIssue]
		///</returns>
		///<parameters>
		///BOIssuetype
		///</parameters>
		public virtual IList<BOIssue> Issuetype_IssueCollection(BOIssuetype boIssuetype)
		{
			return boIssuetype.IssueCollection();
		}
		
		///<Summary>
		///AddIssueToIssuetype
		///This method persists a BOIssue object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIssue
		///</parameters>
		public virtual void AddIssueToIssuetype(BOIssuetype boIssuetype, BOIssue boIssue)
		{
			boIssuetype.AddIssue(boIssue);
		}
		
		///<Summary>
		///DeleteAllIssueFromIssuetype
		///This method deletes all BOIssue objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllIssueFromIssuetype(BOIssuetype boIssuetype)
		{
			boIssuetype.DeleteAllIssue();
		}

		

		#endregion

		#region BOLogin services
		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public virtual BOLogin GetLogin(Int32 id)
		{
			BOLogin boLogin = null;
			try
			{ 	boLogin = new BOLogin(id);	}
			/*this exception occurs when the business object constructor fails/cannot be instantiatiated, 
			* ie the primary/unique key passed in is not valid*/
			catch(NullReferenceException)
			{ 		}
			return boLogin;
		}

		///<Summary>
		///SaveNew
		///This method persists a new Login record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNewLogin(BOLogin boLogin)
		{
			boLogin.SaveNew();
		}

		///<Summary>
		///Update
		///This method updates one Login record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOLogin
		///</parameters>
		public virtual void UpdateLogin(BOLogin boLogin)
		{
			boLogin.Update();
		}

		///<Summary>
		///Delete
		///This method deletes one Login record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteLogin(Int32 id)
		{
			BOLogin boLogin = new BOLogin(id);
			boLogin.Delete();
		}

		///<Summary>
		///BOLoginCollection
		///This method returns the population of BOLogin objects
		///</Summary>
		///<returns>
		///IList[BOLogin]
		///</returns>
		///<parameters>
		///BOLogin
		///</parameters>
		public virtual IList<BOLogin> LoginCollection()
		{
			return BOLogin.LoginCollection();
		}
		
		///<Summary>
		///BOLoginCollectionCount
		///This method returns a count of the population of BOLogin objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOLogin
		///</parameters>
		public virtual Int32 LoginCollectionCount()
		{
			return BOLogin.LoginCollectionCount();
		}
		
		///<Summary>
		///BOLoginCollectionFromSearchFields
		///This method returns a collection of BOLogin objects, based on search fields
		///</Summary>
		///<returns>
		///IList[BOLogin]
		///</returns>
		///<parameters>
		///BOLogin
		///</parameters>
		public virtual IList<BOLogin> LoginCollectionFromSearchFields(BOLogin boLogin)
		{
			return BOLogin.LoginCollectionFromSearchFields(boLogin);
		}
		
		///<Summary>
		///BOLoginCollectionFromSearchFieldsCount
		///This method returns a count of its collection of BOLogin objects, based on search fields
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOLogin
		///</parameters>
		public virtual Int32 LoginCollectionFromSearchFieldsCount(BOLogin boLogin)
		{
			return BOLogin.LoginCollectionFromSearchFieldsCount(boLogin);
		}
		

		#endregion

		#region BORole services
		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public virtual BORole GetRole(Int32 id)
		{
			BORole boRole = null;
			try
			{ 	boRole = new BORole(id);	}
			/*this exception occurs when the business object constructor fails/cannot be instantiatiated, 
			* ie the primary/unique key passed in is not valid*/
			catch(NullReferenceException)
			{ 		}
			return boRole;
		}

		///<Summary>
		///SaveNew
		///This method persists a new Role record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNewRole(BORole boRole)
		{
			boRole.SaveNew();
		}

		///<Summary>
		///Update
		///This method updates one Role record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BORole
		///</parameters>
		public virtual void UpdateRole(BORole boRole)
		{
			boRole.Update();
		}

		///<Summary>
		///Delete
		///This method deletes one Role record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteRole(Int32 id)
		{
			BORole boRole = new BORole(id);
			boRole.Delete();
		}

		///<Summary>
		///BORoleCollection
		///This method returns the population of BORole objects
		///</Summary>
		///<returns>
		///IList[BORole]
		///</returns>
		///<parameters>
		///BORole
		///</parameters>
		public virtual IList<BORole> RoleCollection()
		{
			return BORole.RoleCollection();
		}
		
		///<Summary>
		///BORoleCollectionCount
		///This method returns a count of the population of BORole objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BORole
		///</parameters>
		public virtual Int32 RoleCollectionCount()
		{
			return BORole.RoleCollectionCount();
		}
		
		///<Summary>
		///BORoleCollectionFromSearchFields
		///This method returns a collection of BORole objects, based on search fields
		///</Summary>
		///<returns>
		///IList[BORole]
		///</returns>
		///<parameters>
		///BORole
		///</parameters>
		public virtual IList<BORole> RoleCollectionFromSearchFields(BORole boRole)
		{
			return BORole.RoleCollectionFromSearchFields(boRole);
		}
		
		///<Summary>
		///BORoleCollectionFromSearchFieldsCount
		///This method returns a count of its collection of BORole objects, based on search fields
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BORole
		///</parameters>
		public virtual Int32 RoleCollectionFromSearchFieldsCount(BORole boRole)
		{
			return BORole.RoleCollectionFromSearchFieldsCount(boRole);
		}
		
		///<Summary>
		///Role_TechnicianCollection
		///This method returns its collection of BOTechnician objects
		///</Summary>
		///<returns>
		///IList[BOTechnician]
		///</returns>
		///<parameters>
		///BORole
		///</parameters>
		public virtual IList<BOTechnician> Role_TechnicianCollection(BORole boRole)
		{
			return boRole.TechnicianCollection();
		}
		
		///<Summary>
		///AddTechnicianToRole
		///This method persists a BOTechnician object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOTechnician
		///</parameters>
		public virtual void AddTechnicianToRole(BORole boRole, BOTechnician boTechnician)
		{
			boRole.AddTechnician(boTechnician);
		}
		
		///<Summary>
		///DeleteAllTechnicianFromRole
		///This method deletes all BOTechnician objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllTechnicianFromRole(BORole boRole)
		{
			boRole.DeleteAllTechnician();
		}

		

		#endregion

		#region BOStaff services
		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public virtual BOStaff GetStaff(Int32 id)
		{
			BOStaff boStaff = null;
			try
			{ 	boStaff = new BOStaff(id);	}
			/*this exception occurs when the business object constructor fails/cannot be instantiatiated, 
			* ie the primary/unique key passed in is not valid*/
			catch(NullReferenceException)
			{ 		}
			return boStaff;
		}

		///<Summary>
		///SaveNew
		///This method persists a new Staff record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNewStaff(BOStaff boStaff)
		{
			boStaff.SaveNew();
		}

		///<Summary>
		///Update
		///This method updates one Staff record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOStaff
		///</parameters>
		public virtual void UpdateStaff(BOStaff boStaff)
		{
			boStaff.Update();
		}

		///<Summary>
		///Delete
		///This method deletes one Staff record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteStaff(Int32 id)
		{
			BOStaff boStaff = new BOStaff(id);
			boStaff.Delete();
		}

		///<Summary>
		///BOStaffCollection
		///This method returns the population of BOStaff objects
		///</Summary>
		///<returns>
		///IList[BOStaff]
		///</returns>
		///<parameters>
		///BOStaff
		///</parameters>
		public virtual IList<BOStaff> StaffCollection()
		{
			return BOStaff.StaffCollection();
		}
		
		///<Summary>
		///BOStaffCollectionCount
		///This method returns a count of the population of BOStaff objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOStaff
		///</parameters>
		public virtual Int32 StaffCollectionCount()
		{
			return BOStaff.StaffCollectionCount();
		}
		
		///<Summary>
		///BOStaffCollectionFromSearchFields
		///This method returns a collection of BOStaff objects, based on search fields
		///</Summary>
		///<returns>
		///IList[BOStaff]
		///</returns>
		///<parameters>
		///BOStaff
		///</parameters>
		public virtual IList<BOStaff> StaffCollectionFromSearchFields(BOStaff boStaff)
		{
			return BOStaff.StaffCollectionFromSearchFields(boStaff);
		}
		
		///<Summary>
		///BOStaffCollectionFromSearchFieldsCount
		///This method returns a count of its collection of BOStaff objects, based on search fields
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOStaff
		///</parameters>
		public virtual Int32 StaffCollectionFromSearchFieldsCount(BOStaff boStaff)
		{
			return BOStaff.StaffCollectionFromSearchFieldsCount(boStaff);
		}
		
		///<Summary>
		///Staff_IssueCollection
		///This method returns its collection of BOIssue objects
		///</Summary>
		///<returns>
		///IList[BOIssue]
		///</returns>
		///<parameters>
		///BOStaff
		///</parameters>
		public virtual IList<BOIssue> Staff_IssueCollection(BOStaff boStaff)
		{
			return boStaff.IssueCollection();
		}
		
		///<Summary>
		///AddIssueToStaff
		///This method persists a BOIssue object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIssue
		///</parameters>
		public virtual void AddIssueToStaff(BOStaff boStaff, BOIssue boIssue)
		{
			boStaff.AddIssue(boIssue);
		}
		
		///<Summary>
		///DeleteAllIssueFromStaff
		///This method deletes all BOIssue objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllIssueFromStaff(BOStaff boStaff)
		{
			boStaff.DeleteAllIssue();
		}

		

		#endregion

		#region BOTechnician services
		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public virtual BOTechnician GetTechnician(Int32 id)
		{
			BOTechnician boTechnician = null;
			try
			{ 	boTechnician = new BOTechnician(id);	}
			/*this exception occurs when the business object constructor fails/cannot be instantiatiated, 
			* ie the primary/unique key passed in is not valid*/
			catch(NullReferenceException)
			{ 		}
			return boTechnician;
		}

		///<Summary>
		///SaveNew
		///This method persists a new Technician record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNewTechnician(BOTechnician boTechnician)
		{
			boTechnician.SaveNew();
		}

		///<Summary>
		///Update
		///This method updates one Technician record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOTechnician
		///</parameters>
		public virtual void UpdateTechnician(BOTechnician boTechnician)
		{
			boTechnician.Update();
		}

		///<Summary>
		///Delete
		///This method deletes one Technician record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteTechnician(Int32 id)
		{
			BOTechnician boTechnician = new BOTechnician(id);
			boTechnician.Delete();
		}

		///<Summary>
		///BOTechnicianCollection
		///This method returns the population of BOTechnician objects
		///</Summary>
		///<returns>
		///IList[BOTechnician]
		///</returns>
		///<parameters>
		///BOTechnician
		///</parameters>
		public virtual IList<BOTechnician> TechnicianCollection()
		{
			return BOTechnician.TechnicianCollection();
		}
		
		///<Summary>
		///BOTechnicianCollectionCount
		///This method returns a count of the population of BOTechnician objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOTechnician
		///</parameters>
		public virtual Int32 TechnicianCollectionCount()
		{
			return BOTechnician.TechnicianCollectionCount();
		}
		
		///<Summary>
		///BOTechnicianCollectionFromSearchFields
		///This method returns a collection of BOTechnician objects, based on search fields
		///</Summary>
		///<returns>
		///IList[BOTechnician]
		///</returns>
		///<parameters>
		///BOTechnician
		///</parameters>
		public virtual IList<BOTechnician> TechnicianCollectionFromSearchFields(BOTechnician boTechnician)
		{
			return BOTechnician.TechnicianCollectionFromSearchFields(boTechnician);
		}
		
		///<Summary>
		///BOTechnicianCollectionFromSearchFieldsCount
		///This method returns a count of its collection of BOTechnician objects, based on search fields
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOTechnician
		///</parameters>
		public virtual Int32 TechnicianCollectionFromSearchFieldsCount(BOTechnician boTechnician)
		{
			return BOTechnician.TechnicianCollectionFromSearchFieldsCount(boTechnician);
		}
		
		///<Summary>
		///Technician_IssueCollection
		///This method returns its collection of BOIssue objects
		///</Summary>
		///<returns>
		///IList[BOIssue]
		///</returns>
		///<parameters>
		///BOTechnician
		///</parameters>
		public virtual IList<BOIssue> Technician_IssueCollection(BOTechnician boTechnician)
		{
			return boTechnician.IssueCollection();
		}
		
		///<Summary>
		///Technician_LoginCollection
		///This method returns its collection of BOLogin objects
		///</Summary>
		///<returns>
		///IList[BOLogin]
		///</returns>
		///<parameters>
		///BOTechnician
		///</parameters>
		public virtual IList<BOLogin> Technician_LoginCollection(BOTechnician boTechnician)
		{
			return boTechnician.LoginCollection();
		}
		
		///<Summary>
		///Technician_VisitationCollection
		///This method returns its collection of BOVisitation objects
		///</Summary>
		///<returns>
		///IList[BOVisitation]
		///</returns>
		///<parameters>
		///BOTechnician
		///</parameters>
		public virtual IList<BOVisitation> Technician_VisitationCollection(BOTechnician boTechnician)
		{
			return boTechnician.VisitationCollection();
		}
		
		///<Summary>
		///AddIssueToTechnician
		///This method persists a BOIssue object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIssue
		///</parameters>
		public virtual void AddIssueToTechnician(BOTechnician boTechnician, BOIssue boIssue)
		{
			boTechnician.AddIssue(boIssue);
		}
		
		///<Summary>
		///DeleteAllIssueFromTechnician
		///This method deletes all BOIssue objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllIssueFromTechnician(BOTechnician boTechnician)
		{
			boTechnician.DeleteAllIssue();
		}

		
		///<Summary>
		///AddLoginToTechnician
		///This method persists a BOLogin object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOLogin
		///</parameters>
		public virtual void AddLoginToTechnician(BOTechnician boTechnician, BOLogin boLogin)
		{
			boTechnician.AddLogin(boLogin);
		}
		
		///<Summary>
		///DeleteAllLoginFromTechnician
		///This method deletes all BOLogin objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllLoginFromTechnician(BOTechnician boTechnician)
		{
			boTechnician.DeleteAllLogin();
		}

		
		///<Summary>
		///AddVisitationToTechnician
		///This method persists a BOVisitation object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOVisitation
		///</parameters>
		public virtual void AddVisitationToTechnician(BOTechnician boTechnician, BOVisitation boVisitation)
		{
			boTechnician.AddVisitation(boVisitation);
		}
		
		///<Summary>
		///DeleteAllVisitationFromTechnician
		///This method deletes all BOVisitation objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllVisitationFromTechnician(BOTechnician boTechnician)
		{
			boTechnician.DeleteAllVisitation();
		}

		

		#endregion

		#region BOVisitation services
		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public virtual BOVisitation GetVisitation(Int32 id)
		{
			BOVisitation boVisitation = null;
			try
			{ 	boVisitation = new BOVisitation(id);	}
			/*this exception occurs when the business object constructor fails/cannot be instantiatiated, 
			* ie the primary/unique key passed in is not valid*/
			catch(NullReferenceException)
			{ 		}
			return boVisitation;
		}

		///<Summary>
		///SaveNew
		///This method persists a new Visitation record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNewVisitation(BOVisitation boVisitation)
		{
			boVisitation.SaveNew();
		}

		///<Summary>
		///Update
		///This method updates one Visitation record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOVisitation
		///</parameters>
		public virtual void UpdateVisitation(BOVisitation boVisitation)
		{
			boVisitation.Update();
		}

		///<Summary>
		///Delete
		///This method deletes one Visitation record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteVisitation(Int32 id)
		{
			BOVisitation boVisitation = new BOVisitation(id);
			boVisitation.Delete();
		}

		///<Summary>
		///BOVisitationCollection
		///This method returns the population of BOVisitation objects
		///</Summary>
		///<returns>
		///IList[BOVisitation]
		///</returns>
		///<parameters>
		///BOVisitation
		///</parameters>
		public virtual IList<BOVisitation> VisitationCollection()
		{
			return BOVisitation.VisitationCollection();
		}
		
		///<Summary>
		///BOVisitationCollectionCount
		///This method returns a count of the population of BOVisitation objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOVisitation
		///</parameters>
		public virtual Int32 VisitationCollectionCount()
		{
			return BOVisitation.VisitationCollectionCount();
		}
		
		///<Summary>
		///BOVisitationCollectionFromSearchFields
		///This method returns a collection of BOVisitation objects, based on search fields
		///</Summary>
		///<returns>
		///IList[BOVisitation]
		///</returns>
		///<parameters>
		///BOVisitation
		///</parameters>
		public virtual IList<BOVisitation> VisitationCollectionFromSearchFields(BOVisitation boVisitation)
		{
			return BOVisitation.VisitationCollectionFromSearchFields(boVisitation);
		}
		
		///<Summary>
		///BOVisitationCollectionFromSearchFieldsCount
		///This method returns a count of its collection of BOVisitation objects, based on search fields
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///BOVisitation
		///</parameters>
		public virtual Int32 VisitationCollectionFromSearchFieldsCount(BOVisitation boVisitation)
		{
			return BOVisitation.VisitationCollectionFromSearchFieldsCount(boVisitation);
		}
		

		#endregion

	}
}
