/*************************************************************
** Class generated by CodeTrigger, Version 4.8.6.1
** This class was generated on 9/16/2016 11:50:03 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using HelpDeskManager.Data;

namespace HelpDeskManager.Business
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOIssuetype.
	///It maintains a collection of BOIssue objects.
	///</Summary>
	[DataContract]
	public partial class BOIssuetype : HelpDesk_BaseBusiness
	{
		#region member variables
		protected Int32? _id;
		protected string _name;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		List<BOIssue> _boIssueCollection;
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOIssuetype()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public BOIssuetype(Int32 id)
		{
			try
			{
				DAOIssuetype daoIssuetype = DAOIssuetype.SelectOne(id);
				_id = daoIssuetype.Id;
				_name = daoIssuetype.Name;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOIssuetype
		///</parameters>
		protected internal BOIssuetype(DAOIssuetype daoIssuetype)
		{
			try
			{
				_id = daoIssuetype.Id;
				_name = daoIssuetype.Name;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Issuetype record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOIssuetype daoIssuetype = new DAOIssuetype();
			RegisterDataObject(daoIssuetype);
			BeginTransaction("savenewBOIssuetype");
			try
			{
				daoIssuetype.Name = _name;
				daoIssuetype.Insert();
				CommitTransaction();
				
				_id = daoIssuetype.Id;
				_name = daoIssuetype.Name;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOIssuetype");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Issuetype record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIssuetype
		///</parameters>
		public virtual void Update()
		{
			DAOIssuetype daoIssuetype = new DAOIssuetype();
			RegisterDataObject(daoIssuetype);
			BeginTransaction("updateBOIssuetype");
			try
			{
				daoIssuetype.Id = _id;
				daoIssuetype.Name = _name;
				daoIssuetype.Update();
				CommitTransaction();
				
				_id = daoIssuetype.Id;
				_name = daoIssuetype.Name;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOIssuetype");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Issuetype record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOIssuetype daoIssuetype = new DAOIssuetype();
			RegisterDataObject(daoIssuetype);
			BeginTransaction("deleteBOIssuetype");
			try
			{
				daoIssuetype.Id = _id;
				daoIssuetype.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOIssuetype");
				throw;
			}
		}
		
		///<Summary>
		///IssuetypeCollection
		///This method returns the collection of BOIssuetype objects
		///</Summary>
		///<returns>
		///List[BOIssuetype]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOIssuetype> IssuetypeCollection()
		{
			try
			{
				IList<BOIssuetype> boIssuetypeCollection = new List<BOIssuetype>();
				IList<DAOIssuetype> daoIssuetypeCollection = DAOIssuetype.SelectAll();
			
				foreach(DAOIssuetype daoIssuetype in daoIssuetypeCollection)
					boIssuetypeCollection.Add(new BOIssuetype(daoIssuetype));
			
				return boIssuetypeCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///IssuetypeCollectionCount
		///This method returns the collection count of BOIssuetype objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 IssuetypeCollectionCount()
		{
			try
			{
				Int32 objCount = DAOIssuetype.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///IssuetypeCollectionFromSearchFields
		///This method returns the collection of BOIssuetype objects, filtered by a search object
		///</Summary>
		///<returns>
		///List<BOIssuetype>
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOIssuetype> IssuetypeCollectionFromSearchFields(BOIssuetype boIssuetype)
		{
			try
			{
				IList<BOIssuetype> boIssuetypeCollection = new List<BOIssuetype>();
				DAOIssuetype daoIssuetype = new DAOIssuetype();
				daoIssuetype.Id = boIssuetype.Id;
				daoIssuetype.Name = boIssuetype.Name;
				IList<DAOIssuetype> daoIssuetypeCollection = DAOIssuetype.SelectAllBySearchFields(daoIssuetype);
			
				foreach(DAOIssuetype resdaoIssuetype in daoIssuetypeCollection)
					boIssuetypeCollection.Add(new BOIssuetype(resdaoIssuetype));
			
				return boIssuetypeCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///IssuetypeCollectionFromSearchFieldsCount
		///This method returns the collection count of BOIssuetype objects, filtered by a search object
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 IssuetypeCollectionFromSearchFieldsCount(BOIssuetype boIssuetype)
		{
			try
			{
				DAOIssuetype daoIssuetype = new DAOIssuetype();
				daoIssuetype.Id = boIssuetype.Id;
				daoIssuetype.Name = boIssuetype.Name;
				Int32 objCount = DAOIssuetype.SelectAllBySearchFieldsCount(daoIssuetype);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		///<Summary>
		///IssueCollection
		///This method returns its collection of BOIssue objects
		///</Summary>
		///<returns>
		///IList[BOIssue]
		///</returns>
		///<parameters>
		///BOIssuetype
		///</parameters>
		public virtual IList<BOIssue> IssueCollection()
		{
			try
			{
				if(_boIssueCollection == null)
					LoadIssueCollection();
				
				return _boIssueCollection.AsReadOnly();
			}
			catch
			{
				throw;
			}
		}
		
		///<Summary>
		///LoadIssueCollection
		///This method loads the internal collection of BOIssue objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void LoadIssueCollection()
		{
			try
			{
				_boIssueCollection = new List<BOIssue>();
				IList<DAOIssue> daoIssueCollection = DAOIssue.SelectAllByTypeid(_id.Value);
				
				foreach(DAOIssue daoIssue in daoIssueCollection)
					_boIssueCollection.Add(new BOIssue(daoIssue));
			}
			catch
			{
				throw;
			}
		}
		
		///<Summary>
		///AddIssue
		///This method persists a BOIssue object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIssue
		///</parameters>
		public virtual void AddIssue(BOIssue boIssue)
		{
			DAOIssue daoIssue = new DAOIssue();
			RegisterDataObject(daoIssue);
			BeginTransaction("addIssue");
			try
			{
				daoIssue.Id = boIssue.Id;
				daoIssue.Staffid = boIssue.Staffid;
				daoIssue.Departmentid = boIssue.Departmentid;
				daoIssue.Statusid = boIssue.Statusid;
				daoIssue.Details = boIssue.Details;
				daoIssue.Technicianid = boIssue.Technicianid;
				daoIssue.Remarks = boIssue.Remarks;
				daoIssue.Typeid = _id.Value;
				daoIssue.Insert();
				CommitTransaction();
				
				/*pick up any primary keys, computed values etc*/
				boIssue = new BOIssue(daoIssue);
				if(_boIssueCollection != null)
					_boIssueCollection.Add(boIssue);
			}
			catch
			{
				RollbackTransaction("addIssue");
				throw;
			}
		}
		
		///<Summary>
		///DeleteAllIssue
		///This method deletes all BOIssue objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllIssue()
		{
			RegisterDataObject(null);
			BeginTransaction("deleteAllIssue");
			try
			{
				DAOIssue.DeleteAllByTypeid(ConnectionProvider, _id.Value);
				CommitTransaction();
				if(_boIssueCollection != null)
				{
					_boIssueCollection.Clear();
					_boIssueCollection = null;
				}
			}
			catch
			{
				RollbackTransaction("deleteAllIssue");
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		[DataMember]
		public virtual Int32? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		[DataMember]
		public virtual string Name
		{
			get
			{
				 return _name;
			}
			set
			{
				_name = value;
				_isDirty = true;
			}
		}
		
		[DataMember]
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		[DataMember]
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
