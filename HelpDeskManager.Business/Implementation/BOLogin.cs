/*************************************************************
** Class generated by CodeTrigger, Version 4.8.6.1
** This class was generated on 9/16/2016 11:50:03 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using HelpDeskManager.Data;

namespace HelpDeskManager.Business
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOLogin.
	///</Summary>
	[DataContract]
	public partial class BOLogin : HelpDesk_BaseBusiness
	{
		#region member variables
		protected Int32? _id;
		protected string _username;
		protected string _password;
		protected Int32? _technicianid;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOLogin()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public BOLogin(Int32 id)
		{
			try
			{
				DAOLogin daoLogin = DAOLogin.SelectOne(id);
				_id = daoLogin.Id;
				_username = daoLogin.Username;
				_password = daoLogin.Password;
				_technicianid = daoLogin.Technicianid;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOLogin
		///</parameters>
		protected internal BOLogin(DAOLogin daoLogin)
		{
			try
			{
				_id = daoLogin.Id;
				_username = daoLogin.Username;
				_password = daoLogin.Password;
				_technicianid = daoLogin.Technicianid;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Login record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOLogin daoLogin = new DAOLogin();
			RegisterDataObject(daoLogin);
			BeginTransaction("savenewBOLogin");
			try
			{
				daoLogin.Username = _username;
				daoLogin.Password = _password;
				daoLogin.Technicianid = _technicianid;
				daoLogin.Insert();
				CommitTransaction();
				
				_id = daoLogin.Id;
				_username = daoLogin.Username;
				_password = daoLogin.Password;
				_technicianid = daoLogin.Technicianid;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOLogin");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Login record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOLogin
		///</parameters>
		public virtual void Update()
		{
			DAOLogin daoLogin = new DAOLogin();
			RegisterDataObject(daoLogin);
			BeginTransaction("updateBOLogin");
			try
			{
				daoLogin.Id = _id;
				daoLogin.Username = _username;
				daoLogin.Password = _password;
				daoLogin.Technicianid = _technicianid;
				daoLogin.Update();
				CommitTransaction();
				
				_id = daoLogin.Id;
				_username = daoLogin.Username;
				_password = daoLogin.Password;
				_technicianid = daoLogin.Technicianid;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOLogin");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Login record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOLogin daoLogin = new DAOLogin();
			RegisterDataObject(daoLogin);
			BeginTransaction("deleteBOLogin");
			try
			{
				daoLogin.Id = _id;
				daoLogin.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOLogin");
				throw;
			}
		}
		
		///<Summary>
		///LoginCollection
		///This method returns the collection of BOLogin objects
		///</Summary>
		///<returns>
		///List[BOLogin]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOLogin> LoginCollection()
		{
			try
			{
				IList<BOLogin> boLoginCollection = new List<BOLogin>();
				IList<DAOLogin> daoLoginCollection = DAOLogin.SelectAll();
			
				foreach(DAOLogin daoLogin in daoLoginCollection)
					boLoginCollection.Add(new BOLogin(daoLogin));
			
				return boLoginCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///LoginCollectionCount
		///This method returns the collection count of BOLogin objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 LoginCollectionCount()
		{
			try
			{
				Int32 objCount = DAOLogin.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///LoginCollectionFromSearchFields
		///This method returns the collection of BOLogin objects, filtered by a search object
		///</Summary>
		///<returns>
		///List<BOLogin>
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOLogin> LoginCollectionFromSearchFields(BOLogin boLogin)
		{
			try
			{
				IList<BOLogin> boLoginCollection = new List<BOLogin>();
				DAOLogin daoLogin = new DAOLogin();
				daoLogin.Id = boLogin.Id;
				daoLogin.Username = boLogin.Username;
				daoLogin.Password = boLogin.Password;
				daoLogin.Technicianid = boLogin.Technicianid;
				IList<DAOLogin> daoLoginCollection = DAOLogin.SelectAllBySearchFields(daoLogin);
			
				foreach(DAOLogin resdaoLogin in daoLoginCollection)
					boLoginCollection.Add(new BOLogin(resdaoLogin));
			
				return boLoginCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///LoginCollectionFromSearchFieldsCount
		///This method returns the collection count of BOLogin objects, filtered by a search object
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 LoginCollectionFromSearchFieldsCount(BOLogin boLogin)
		{
			try
			{
				DAOLogin daoLogin = new DAOLogin();
				daoLogin.Id = boLogin.Id;
				daoLogin.Username = boLogin.Username;
				daoLogin.Password = boLogin.Password;
				daoLogin.Technicianid = boLogin.Technicianid;
				Int32 objCount = DAOLogin.SelectAllBySearchFieldsCount(daoLogin);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		[DataMember]
		public virtual Int32? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		[DataMember]
		public virtual string Username
		{
			get
			{
				 return _username;
			}
			set
			{
				_username = value;
				_isDirty = true;
			}
		}
		
		[DataMember]
		public virtual string Password
		{
			get
			{
				 return _password;
			}
			set
			{
				_password = value;
				_isDirty = true;
			}
		}
		
		[DataMember]
		public virtual Int32? Technicianid
		{
			get
			{
				 return _technicianid;
			}
			set
			{
				_technicianid = value;
				_isDirty = true;
			}
		}
		
		[DataMember]
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		[DataMember]
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
